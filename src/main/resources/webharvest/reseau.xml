<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Naonedbus-server
  %%
  Copyright (C) 2010 - 2013 Naonedbus
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 3 of the 
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public 
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-3.0.html>.
  #L%
  -->

<config charset="ISO-8859-1">
    <var-def name="mainUrl">http://www.tan.fr/php/horaires/LI_recherche_ligne.php?txtdate=22%2F07%2F2011&amp;MyLig=&amp;service=HORQUO&amp;tokenewp=</var-def>
	 
	<function name="clearLineReturn">
		<return>
			<script return="s.toString()"><![CDATA[
					    String s = value.toString();									
					    s = s.replaceAll("\n","");
			    ]]>
			</script>
		</return>
	</function>
 
   	<file action="write" path="c:\reseau-tan.sql" charset="UTF-8">
		<!-- Récupérer les lignes -->
	    <loop item="ligne" index="i" filter="unique">
		    <list>
		        <xpath expression="//select[@id='MyLig']//option">
		            <html-to-xml>
		                <http url="${mainUrl}"/>
		            </html-to-xml>
		        </xpath>
		    </list>
		    <body>
		    	
		        <regexp>
		            <regexp-pattern><![CDATA[<option value="([\s\S]*?)"[\S\s]*?>([\w\s]+)\s\|\s([\w\s]+)\s\|\s([\W\w\s]*?)(&lt;\s&gt;\s([\W\w\s]*?))?</option>]]></regexp-pattern>
			        <regexp-source><var name="ligne"/></regexp-source>
		            <regexp-result>
	            	
	            		<empty>
						    <var-def name="nomDepuis">
								<call name="clearLineReturn">
							        <call-param name="value">
							           <template>${_4}</template>
							        </call-param>
						        </call>
						    </var-def>
						    <var-def name="nomVers">
								<call name="clearLineReturn">
							        <call-param name="value">
							           <template>${_6}</template>
							        </call-param>
						        </call>
						    </var-def>
					    </empty>
					    
		                <template>INSERT INTO ligne(code, nom, depuis, vers) VALUES("${_1}", "${nomDepuis} - ${nomVers}", "${nomDepuis}", "${nomVers}");</template>
		            </regexp-result>
		        </regexp>
		          
		       	<empty>
			        <var-def name="codeLigne"><template>${_1}</template></var-def>
				</empty>
		            
		       	<!-- Pour chaque ligne, récupérer les sens -->
		        <loop item="sens" index="i" filter="unique">
		            <list>
		                <xpath expression="//select[@id='MySe']//option">
		                    <html-to-xml>
		                        <http url="http://www.tan.fr/php/horaires/LI_recherche_direction.php?MyLig=${codeLigne}&amp;MyDat=22%2F07%2F2011&amp;service=HORQUO&amp;tokenewp="/>
		                    </html-to-xml>
		                </xpath>
		            </list>
		            <body>    	
		            <regexp>
		                <regexp-pattern><![CDATA[<option value="([\s\S]*?)"[\S\s]*?>([\s\S]*?)</option>]]></regexp-pattern>
		                <regexp-source><var name="sens"/></regexp-source>
		                <regexp-result>
		                  <empty>
			                  <var-def name="codeSens"><template>${_1}</template></var-def>
		                  </empty>
		                  <template>INSERT INTO sens(code, nom, id_ligne) VALUES("${_1}", "${_2}", (SELECT id FROM ligne WHERE code = "${codeLigne}"));
				                  	SELECT @idSens := max(id) from sens;</template>
		                </regexp-result>
		            </regexp>
			            
			        <empty>
				        <var-def name="codeSens"><template>${_1}</template></var-def>
					</empty>
			            
	           	       	<!-- Pour chaque sens, récupérer les arrêts -->
						<loop item="arret" index="i" filter="unique">
							<list>
								<xpath expression="//select[@id='MyArr']//option">
									<html-to-xml>
										<http url="http://www.tan.fr/php/horaires/LI_recherche_arret.php?MySe=${codeSens}&amp;MyLig=${codeLigne}&amp;MyDat=22%2F07%2F2011&amp;service=HORQUO&amp;tokenewp="/>
									</html-to-xml>
								</xpath>
							</list>
							<body>    	
								<regexp>
									<regexp-pattern><![CDATA[<option value="([\s\S]*?)"[\S\s]*?>([\s\S]*?)</option>]]></regexp-pattern>
										<regexp-source><var name="arret"/></regexp-source>
									<regexp-result>
										<empty>
											<var-def name="nomArret">
										        <template>${_2}</template>
										    </var-def>
										    <var-def name="normalizedNom">
												<script return="s.toString().toUpperCase()"><![CDATA[
														    String s = nomArret.toString();
														
														    s = s.replaceAll("[èéêë]","e");
														    s = s.replaceAll("[ûù]","u");
														    s = s.replaceAll("[ïî]","i");
														    s = s.replaceAll("[àâ]","a");
														    s = s.replaceAll("ô","o");
														
														    s = s.replaceAll("[ÈÉÊË]","E");
														    s = s.replaceAll("[ÛÙ]","U");
														    s = s.replaceAll("[ÏÎ]","I");
														    s = s.replaceAll("[ÀÂ]","A");
														    s = s.replaceAll("Ô","O");
											        ]]>
												</script>
										    </var-def>
										</empty>
										<template>INSERT INTO arret(code, nom, normalizedNom, id_sens) VALUES("${_1}", "${nomArret}", "${normalizedNom}", @idSens);</template>
									</regexp-result>
								</regexp>
							</body>
						</loop>
		        	</body>
		        </loop>
		    </body>
		</loop>
		
    </file>
</config>